---
- name: "Find CPU manufacturer"
  shell: "lscpu | grep 'Model name:' | cut -d':' -f2 | xargs | cut -d' ' -f1 | sed -E 's#(intel|amd).*#\\1#i' | tr '[:upper:]' '[:lower:]'"
  changed_when: no
  register: cpu_manufacturer
  failed_when: cpu_manufacturer.stdout not in ["amd", "intel"]

- name: "Install microcode and mkinitcpio"
  pacman:
    name:
      - "{{ cpu_manufacturer.stdout }}-ucode"
      - "mkinitcpio"
    state: "present"

- include_role:
    name: "yay"
  vars:
    pkg_name: "systemd-boot-pacman-hook"

- name: "Check if systemd-boot is installed"
  stat:
    path: "{{ esp_mount }}/EFI/systemd"
  register: systemd_boot

- name: "Install systemd-boot"
  command: "bootctl --path={{ esp_mount }} install"
  when: systemd_boot is defined and systemd_boot.stat.islnk is not defined

- name: "Copy systemd-boot entry for Arch Linux"
  block:
    - command: "blkid -s UUID -o value {{ partition_os }}"
      changed_when: no
      register: crypto_uuid
    - template: src="arch.conf.j2" dest="/boot/loader/entries/arch.conf"
      vars:
        uuid: "{{ crypto_uuid.stdout }}"
        cpu: "{{ cpu_manufacturer.stdout }}"
    - template: src="arch-fallback.conf.j2" dest="/boot/loader/entries/arch-fallback.conf"
      vars:
        uuid: "{{ crypto_uuid.stdout }}"
        cpu: "{{ cpu_manufacturer.stdout }}"

- name: "Install dependencies defined on mkinitcpio"
  pacman:
    name:
      - "linux"
      - "linux-firmware"
      - "lvm2"
    state: "present"

- include_role:
    name: "yay"
  vars:
    pkg_name: "mkinitcpio-firmware"

- name: "Set HOOKS for mkinitcpio"
  lineinfile:
    path: "/etc/mkinitcpio.conf"
    regexp: "^HOOKS="
    line: "HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck encrypt lvm2)"
    state: "present"
  notify: "Create mkinitcpio configuration"
