---
- name: "install firefox"
  pacman:
    name: "firefox"
    state: present
  become: yes

- name: "check profiles.ini"
  stat:
    path: "{{ firefox_profiles }}/profiles.ini"
  register: st_profiles

- name: "find identifier of profile"
  shell: "grep Path= {{ firefox_profiles }}/profiles.ini | sed -r 's/Path=(.+)/\\1/'"
  register: profile
  changed_when: false
  when: st_profiles.stat.islnk is defined

- name: "check handlers.json"
  stat:
    path: "{{ firefox_profiles }}/{{ profile.stdout }}/handlers.json"
  register: st_handlers

- name: "add magnet handler"
  lineinfile:
    path: "{{ firefox_profiles }}/{{ profile.stdout }}/handlers.json"
    regexp: "(.*)\"schemes.*"
    line: '\1"schemes":{"magnet":{"action":2,"handlers":[{"name":"magnet","path":"{{ scripts_directory | regex_replace("~", ansible_env.HOME) }}/magnet"}]}}}'
    state: present
    backrefs: true
  when:
    - st_handlers.stat.islnk is defined
    - profile is defined
    - profile.stdout != ""

- name: "check prefs.js"
  stat:
    path: "{{ firefox_profiles }}/{{ profile.stdout }}/prefs.js"
  register: st_prefs

- name: "disable network.protocol-handler.expose.magnet"
  lineinfile:
    path: "{{ firefox_profiles }}/{{ profile.stdout }}/prefs.js"
    regexp: ".*network.protocol-handler.expose.magnet.*"
    line: "user_pref(\"network.protocol-handler.expose.magnet\", false);"
    state: present
  when:
    - st_prefs.stat.islnk is defined
    - profile is defined
    - profile.stdout != ""

- name: "enable browser.tabs.loadDivertedInBackground"
  lineinfile:
    path: "{{ firefox_profiles }}/{{ profile.stdout }}/prefs.js"
    regexp: ".*browser.tabs.loadDivertedInBackground.*"
    line: "user_pref(\"browser.tabs.loadDivertedInBackground\", true);"
    state: present
  when:
    - st_prefs.stat.islnk is defined
    - profile is defined
    - profile.stdout != ""
