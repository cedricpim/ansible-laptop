#!/usr/bin/env bash
set -eo pipefail
IFS=$'\n\t'

{{ ansible_managed | comment }}

### upload â€” utility script used to upload a file to a folder synced with
###          a private server and openly accessible, returning the URL from
###          where the file can be downloaded.
###
### Usage:
###   upload add <file>
###   upload rm <file>
###
### Options:
###   <file>    Full path to the file being uploaded/removed

base_dir={{ personal_public_files }}

case $1 in
  add)
    # Exit if file given doesn't exist
    if [ ! -f "$2" ]; then
      echo "$2 doesn't exist"
      exit 1
    fi

    original_filename=$(basename "$2")
    if echo $original_filename | grep -q '\.'; then
      extension=".${original_filename##*.}"
    else
      extension=""
    fi

    # Create upload folder (if it doesn't exist)
    mkdir -p $base_dir

    # Generate random UUID - which will be used as the file name
    filename="$(uuidgen)$extension"

    # Copy file over to public folder
    cp $2 $base_dir/$filename

    # Keep index of files uploaded
    touch $base_dir/index
    echo "$original_filename => $filename" | tee -a "$base_dir/index" > /dev/null

    url="https://{{ personal_server }}/public/$filename"

    # Check if file was been uploaded
    while [ "`curl -s -o /dev/null -I -w "%{http_code}" $url`" != "200" ]; do
      echo -n "."
      sleep 2
    done

    # Print out link to the file on the server
    echo $url
    ;;

  rm)
    # Get generate file names matching name provided
    filenames=( $(sed -n -r "s/^$(echo $2)[^>]*> //gp" "$base_dir/index") )

    # Exit if file given doesn't exist
    if [ ! -n "$filenames" ]; then
      echo "$2 doesn't exist"
      exit 128
    fi

    for filename in ${filenames[@]}; do
      # Delete file from public dir
      rm $base_dir/$filename

      # Delete entry from dictionary
      sed -E -i "/.*$filename$/d" "$base_dir/index"
    done
    ;;

  *)
    shelp $0
    exit 1
esac
