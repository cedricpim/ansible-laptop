---
- name: "Create boot partition"
  parted:
    name: "EFI System"
    device: "/dev/sda"
    number: "1"
    flags: [ "boot", "esp" ]
    label: "gpt"
    state: "present"
    part_end: "551MiB"

- name: "Create OS partition"
  parted:
    name: "Operative System"
    device: "/dev/sda"
    number: "2"
    label: "gpt"
    state: "present"
    part_start: "551MiB"

- name: "Display current partitions"
  command: "lsblk -f"
  changed_when: no
  register: encrypted

- name: "Create LUKS partition"
  block:
    - tempfile: suffix="crypt" state="directory"
      register: tempdir_encrypt
    - copy: content="xxx" dest="{{ tempdir_encrypt.path }}/keyfile"
      no_log: yes
    - command: "cryptsetup luksFormat --type luks2 --key-file {{ tempdir_encrypt.path }}/keyfile /dev/sda2"
      when: encrypted is defined and encrypted.stdout.find("crypto_LUKS") == -1
    - command: "cryptsetup open --key-file {{ tempdir_encrypt.path }}/keyfile /dev/sda2 cryptolvm"
  always:
    - file: path="{{ tempdir_encrypt.path }}" state="absent"
  when: encrypted is defined and encrypted.stdout.find("cryptolvm") == -1

- name: "Create the volume group (and physical volume) inside the LUKS partition"
  lvg:
    vg: "MyVol"
    pvs: "/dev/mapper/cryptolvm"

- name: "Create the logical volumes"
  lvol:
    vg: "MyVol"
    lv: "{{ item.name }}"
    size: "{{ item.size }}"
    shrink: no
  with_items:
    - { name: "root", size: "8g" }
    - { name: "home", size: "100%FREE" }

- name: "Format partitions"
  filesystem:
    fstype: "{{ item.fstype }}"
    dev: "{{ item.partition }}"
    opts: "{{ item.opts }}"
  with_items:
    - { fstype: "ext4", partition: "/dev/MyVol/root", opts: "" }
    - { fstype: "ext4", partition: "/dev/MyVol/home", opts: "" }
    - { fstype: "vfat", partition: "/dev/sda1", opts: "-F32"   }

- name: "Mount partitions"
  mount:
    src: "{{ item.partition }}"
    path: "{{ item.path }}"
    fstype: "{{ item.fstype }}"
    state: "mounted"
  with_items:
    - { partition: "/dev/MyVol/root", path: "/mnt",      fstype: "ext4" }
    - { partition: "/dev/MyVol/home", path: "/mnt/home", fstype: "ext4" }
    - { partition: "/dev/sda1",       path: "/mnt/boot", fstype: "vfat" }

- name: "Check if Arch Linux is already installed"
  command: "arch-chroot /mnt"
  failed_when: no
  changed_when: no
  register: arch_chroot_mount

- name: "Install Arch Linux"
  command: "pacstrap /mnt base base-devel ansible git make vim"
  when: arch_chroot_mount is defined and arch_chroot_mount.stderr.find("ERROR") >= 0

- name: "Download ansible-laptop repository"
  git:
    repo: "{{ ansible_laptop_repo }}"
    dest: "{{ ansible_laptop_directory }}"
    clone: yes
    update: yes

- name: "Generate fstab"
  command: "genfstab -U /mnt"
  changed_when: no
  register: genfstab

- name: "Save fstab"
  blockinfile:
    dest: "/mnt/etc/fstab"
    block: "{{ genfstab.stdout }}"
    state: "present"
    create: yes
  when: genfstab is defined
