---
- name: "Install permissions management packages"
  pacman:
    name:
      - "sudo"
      - "polkit"
      - "ntfs-3g"
    state: "present"
  become: yes

- name: "Ensure we have a 'wheel' group"
  group:
    name: "wheel"
    state: "present"
  become: yes

- name: "Allow 'wheel' group to have passwordless sudo"
  lineinfile:
    path: "/etc/sudoers"
    regexp: '%wheel ALL=\(ALL\) ALL'
    line: "%wheel ALL=(ALL) ALL"
    validate: "visudo -cf %s"
    backup: yes
  become: yes

- name: "Create initial groups"
  group:
    name: "{{ item }}"
    state: "present"
  with_items: "{{ users_groups }}"
  become: yes

- name: "Create users"
  user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    createhome: yes
    groups: "{{ users_groups }}"
    append: yes
    state: "present"
  with_items: "{{ users }}"
  become: yes

- name: "Install git and openssh"
  pacman:
    name:
      - "git"
      - "openssh"
    state: "present"
  become: yes

- name: "Generate SSH keys"
  user:
    name: "{{ item.owner }}"
    generate_ssh_key: yes
    ssh_key_file: ".ssh/{{ item.service }}_id"
    ssh_key_type: "{{ item.type }}"
    ssh_key_passphrase: "{{ item.passphrase }}"
    ssh_key_comment: "{{ item.owner }} - {{ item.service }}"
  with_items: "{{ ssh_keys }}"
  become: yes
  register: ssh_keys_created

- name: "Setup Github with SSH key"
  block:
    - known_hosts: path="~/.ssh/known_hosts" name="github.com" key="{{ github_host }}"
      with_items: "{{ ssh_keys_created.results | selectattr('ssh_key_file', 'search', 'github_id$') | list }}"
    - github_key: name="[{{ ansible_product_name }}] {{ item.name }}" pubkey="{{ item.ssh_public_key }}" token="{{ github_access_token }}"
      with_items: "{{ ssh_keys_created.results | selectattr('ssh_key_file', 'search', 'github_id$') | list }}"
      when: group_names[0] != "vagrant"
  when: ssh_keys_created is defined
  become: yes
  become_user: "{{ item.name }}"

- name: "Setup ansible laptop project"
  block:
    - file: path="{{ ansible_laptop_directory }}" state="directory"
      with_items: "{{ users }}"
    - git: repo="{{ ansible_laptop_repo }}" dest="{{ ansible_laptop_dest }}" clone=yes update=no
      with_items: "{{ users }}"
    - replace: path="{{ ansible_laptop_dest }}/.git/config" regexp="{{ github_https_base }}" replace="{{ github_ssh_base }}"
      with_items: "{{ users }}"
    - copy: content="{{ item.general_vault }}" dest="{{ ansible_laptop_dest }}/vaulted_vars/general.txt"
      with_items: "{{ users }}"
    - copy: content="{{ item.vault }}" dest="{{ ansible_laptop_dest }}/vaulted_vars/{{ item.name }}.txt"
      with_items: "{{ users }}"
      when: group_names[0] != "vagrant"
  become: yes
  become_user: "{{ item.name }}"
