---
- include_role:
    name: "yay"
  vars:
    pkg_name: "duplicacy"

- name: "Install pexpect"
  pip:
    name: "pexpect"
    state: "latest"
  become: yes

- name: "Create folder for main backups"
  file:
    path: "{{ backup_final_destination }}"
    owner: "{{ backup_main_user }}"
    group: "{{ backup_main_user }}"
    state: "directory"
    mode: "0755"
  become: yes

- name: "Create folder for secondary backups"
  file:
    path: "{{ backup_secondary_destination }}"
    state: "directory"
  become: yes

- name: "Check if duplicacy repository has been initialized"
  command: "duplicacy info {{ backup_final_destination }}/{{ item.name }}"
  with_items: "{{ backup_configurations }}"
  no_log: yes
  become: yes
  register: initialized_duplicacy_repositories
  changed_when: no

- name: "Initiate the repositories for backups"
  expect:
    command: "duplicacy init -e -storage-name {{ item.item.name }} {{ item.item.name }} {{ backup_final_destination }}/{{ item.item.name }}"
    responses:
      password: "{{ item.item.password }}"
  args:
    chdir: "{{ item.item.directory }}"
  with_items: "{{ initialized_duplicacy_repositories.results }}"
  no_log: yes
  become: yes
  when:
    - initialized_duplicacy_repositories is defined
    - item.stdout.find(storage_not_initialized) != -1

- name: "Copy filters for backup"
  template:
    src: "filters.j2"
    dest: "{{ item.directory }}/.duplicacy/filters"
    mode: "0644"
  vars:
    lines: "{{ item.filters | default([]) }}"
  with_items: "{{ backup_configurations }}"
  no_log: yes
  become: yes

- name: "Ensure {{ backup_main_user }} permissions are set"
  file:
    path: "{{ backup_final_destination }}"
    owner: "{{ backup_main_user }}"
    group: "{{ backup_main_user }}"
    state: "directory"
    recurse: yes
  become: yes

- name: "Check if duplicacy repository has been added"
  command: "duplicacy info {{ backup_secondary_destination }}/{{ item.name }}"
  with_items: "{{ backup_configurations }}"
  no_log: yes
  become: yes
  register: added_duplicacy_repositories
  changed_when: no

- name: "Add additional backup repository"
  expect:
    command: "duplicacy add -e -bit-identical -copy {{ item.item.name }} {{ item.item.name }}-snd {{ item.item.name }} {{ backup_secondary_destination }}/{{ item.item.name }}"
    responses:
      password: "{{ item.item.password }}"
  args:
    chdir: "{{ item.item.directory }}"
  with_items: "{{ added_duplicacy_repositories.results }}"
  become: yes
  when:
    - added_duplicacy_repositories is defined
    - item.stdout.find(storage_not_initialized) != -1
